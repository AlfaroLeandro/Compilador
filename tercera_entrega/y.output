Terminals unused in grammar

   ENDWHILE
   READ_T
   IN_T
   DO_T
   whitespace
   linefeed
   DIGITO
   LETRA
   COMILLA_D
   COMILLA_A
   COMILLA_C
   OP_AVG
   ENDIF


Gramática

    0 $accept: programa_final $end

    1 programa_final: programa

    2 programa: sentencia

    3 sentencia: sentencia grammar SEP_LINEA
    4          | grammar SEP_LINEA
    5          | sentencia grammar
    6          | grammar
    7          | declaracion
    8          | sentencia declaracion

    9 sentenciaCuerpo: sentenciaCuerpo grammar SEP_LINEA
   10                | grammar SEP_LINEA
   11                | sentenciaCuerpo grammar
   12                | grammar

   13 grammar: asig
   14        | while
   15        | display
   16        | get
   17        | if

   18 asig: ID_T OP_ASIG expr
   19     | ID_T OP_ASIG const_string_r

   20 while: WHILE_T cond_final LLAVE_A sentenciaCuerpo LLAVE_C

   21 if: IF_T cond_final LLAVE_A sentenciaCuerpo LLAVE_C

   22 $@1: /* vacío */

   23 $@2: /* vacío */

   24 if: IF_T cond_final LLAVE_A sentenciaCuerpo LLAVE_C $@1 ELSE_T LLAVE_A sentenciaCuerpo LLAVE_C $@2

   25 display: DISPLAY const_string_r
   26        | DISPLAY expr

   27 get: GET ID_T

   28 const_string_r: CONST_STRING

   29 numero: CONST_INT
   30       | CONST_FLOAT

   31 cond_final: PARENT_A cond_final AND_T cond_final PARENT_C

   32 $@3: /* vacío */

   33 cond_final: PARENT_A cond AND_T $@3 cond PARENT_C

   34 $@4: /* vacío */

   35 cond_final: PARENT_A cond OR_T $@4 cond PARENT_C
   36           | PARENT_A cond PARENT_C
   37           | NOT_T cond_final
   38           | PARENT_A cond_final PARENT_C

   39 cond: expr OP_DISTINTO termino
   40     | expr OP_IGUAL termino
   41     | expr OP_MAYOR termino
   42     | expr OP_MAYORIGUAL termino
   43     | expr OP_MENOR termino
   44     | expr OP_MENORIGUAL termino
   45     | expr OR_T termino
   46     | expr AND_T termino
   47     | expr NOT_T termino

   48 expr: expr OP_SUM termino
   49     | expr OP_MENOS termino
   50     | termino

   51 termino: termino OP_MUL factor
   52        | termino OP_DIVISION factor
   53        | '-' termino
   54        | factor

   55 factor: PARENT_A expr PARENT_C
   56       | numero
   57       | ID_T

   58 declaracion: DIM OP_MENOR dupla_asig OP_MAYOR

   59 dupla_asig: ID_T COMA dupla_asig COMA tipo
   60           | ID_T OP_MAYOR AS OP_MENOR tipo

   61 tipo: FLOAT_T
   62     | INT_T
   63     | STRING
   64     | CHAR


Terminales con las reglas donde aparecen

$end (0) 0
'-' (45) 53
error (256)
WHILE_T (258) 20
ENDWHILE (259)
DISPLAY (260) 25 26
GET (261) 27
READ_T (262)
FLOAT_T (263) 61
INT_T (264) 62
CHAR (265) 64
IN_T (266)
DO_T (267)
AS (268) 60
STRING (269) 63
whitespace (270)
linefeed (271)
DIGITO (272)
LETRA (273)
COMILLA_D (274)
COMILLA_A (275)
COMILLA_C (276)
CONST_INT (277) 29
CONST_FLOAT (278) 30
OP_AVG (279)
CONST_STRING (280) 28
ELSE_T (281) 24
IF_T (282) 21 24
ENDIF (283)
DIM (284) 58
ID_T (285) 18 19 27 57 59 60
OP_MENOS (286) 49
OP_SUM (287) 48
OP_DIVISION (288) 52
OP_MUL (289) 51
MENOS_UNARIO (290)
OP_ASIG (291) 18 19
OP_DISTINTO (292) 39
OP_IGUAL (293) 40
OP_MAYORIGUAL (294) 42
OP_MAYOR (295) 41 58 60
OP_MENOR (296) 43 58 60
OP_MENORIGUAL (297) 44
OR_T (298) 35 45
AND_T (299) 31 33 46
NOT_T (300) 37 47
LLAVE_C (301) 20 21 24
LLAVE_A (302) 20 21 24
PARENT_C (303) 31 33 35 36 38 55
PARENT_A (304) 31 33 35 36 38 55
COMA (305) 59
SEP_LINEA (306) 3 4 9 10


No terminales con las reglas donde aparecen

$accept (53)
    en la izquierda: 0
programa_final (54)
    en la izquierda: 1, en la derecha: 0
programa (55)
    en la izquierda: 2, en la derecha: 1
sentencia (56)
    en la izquierda: 3 4 5 6 7 8, en la derecha: 2 3 5 8
sentenciaCuerpo (57)
    en la izquierda: 9 10 11 12, en la derecha: 9 11 20 21 24
grammar (58)
    en la izquierda: 13 14 15 16 17, en la derecha: 3 4 5 6 9 10 11
    12
asig (59)
    en la izquierda: 18 19, en la derecha: 13
while (60)
    en la izquierda: 20, en la derecha: 14
if (61)
    en la izquierda: 21 24, en la derecha: 17
$@1 (62)
    en la izquierda: 22, en la derecha: 24
$@2 (63)
    en la izquierda: 23, en la derecha: 24
display (64)
    en la izquierda: 25 26, en la derecha: 15
get (65)
    en la izquierda: 27, en la derecha: 16
const_string_r (66)
    en la izquierda: 28, en la derecha: 19 25
numero (67)
    en la izquierda: 29 30, en la derecha: 56
cond_final (68)
    en la izquierda: 31 33 35 36 37 38, en la derecha: 20 21 24 31
    37 38
$@3 (69)
    en la izquierda: 32, en la derecha: 33
$@4 (70)
    en la izquierda: 34, en la derecha: 35
cond (71)
    en la izquierda: 39 40 41 42 43 44 45 46 47, en la derecha: 33
    35 36
expr (72)
    en la izquierda: 48 49 50, en la derecha: 18 26 39 40 41 42 43
    44 45 46 47 48 49 55
termino (73)
    en la izquierda: 51 52 53 54, en la derecha: 39 40 41 42 43 44
    45 46 47 48 49 50 51 52 53
factor (74)
    en la izquierda: 55 56 57, en la derecha: 51 52 54
declaracion (75)
    en la izquierda: 58, en la derecha: 7 8
dupla_asig (76)
    en la izquierda: 59 60, en la derecha: 58 59
tipo (77)
    en la izquierda: 61 62 63 64, en la derecha: 59 60


estado 0

    0 $accept: . programa_final $end

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    DIM      desplazar e ir al estado 5
    ID_T     desplazar e ir al estado 6

    programa_final  ir al estado 7
    programa        ir al estado 8
    sentencia       ir al estado 9
    grammar         ir al estado 10
    asig            ir al estado 11
    while           ir al estado 12
    if              ir al estado 13
    display         ir al estado 14
    get             ir al estado 15
    declaracion     ir al estado 16


estado 1

   20 while: WHILE_T . cond_final LLAVE_A sentenciaCuerpo LLAVE_C

    NOT_T     desplazar e ir al estado 17
    PARENT_A  desplazar e ir al estado 18

    cond_final  ir al estado 19


estado 2

   25 display: DISPLAY . const_string_r
   26        | DISPLAY . expr

    CONST_INT     desplazar e ir al estado 20
    CONST_FLOAT   desplazar e ir al estado 21
    CONST_STRING  desplazar e ir al estado 22
    ID_T          desplazar e ir al estado 23
    PARENT_A      desplazar e ir al estado 24
    '-'           desplazar e ir al estado 25

    const_string_r  ir al estado 26
    numero          ir al estado 27
    expr            ir al estado 28
    termino         ir al estado 29
    factor          ir al estado 30


estado 3

   27 get: GET . ID_T

    ID_T  desplazar e ir al estado 31


estado 4

   21 if: IF_T . cond_final LLAVE_A sentenciaCuerpo LLAVE_C
   24   | IF_T . cond_final LLAVE_A sentenciaCuerpo LLAVE_C $@1 ELSE_T LLAVE_A sentenciaCuerpo LLAVE_C $@2

    NOT_T     desplazar e ir al estado 17
    PARENT_A  desplazar e ir al estado 18

    cond_final  ir al estado 32


estado 5

   58 declaracion: DIM . OP_MENOR dupla_asig OP_MAYOR

    OP_MENOR  desplazar e ir al estado 33


estado 6

   18 asig: ID_T . OP_ASIG expr
   19     | ID_T . OP_ASIG const_string_r

    OP_ASIG  desplazar e ir al estado 34


estado 7

    0 $accept: programa_final . $end

    $end  desplazar e ir al estado 35


estado 8

    1 programa_final: programa .

    $default  reduce usando la regla 1 (programa_final)


estado 9

    2 programa: sentencia .
    3 sentencia: sentencia . grammar SEP_LINEA
    5          | sentencia . grammar
    8          | sentencia . declaracion

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    DIM      desplazar e ir al estado 5
    ID_T     desplazar e ir al estado 6

    $default  reduce usando la regla 2 (programa)

    grammar      ir al estado 36
    asig         ir al estado 11
    while        ir al estado 12
    if           ir al estado 13
    display      ir al estado 14
    get          ir al estado 15
    declaracion  ir al estado 37


estado 10

    4 sentencia: grammar . SEP_LINEA
    6          | grammar .

    SEP_LINEA  desplazar e ir al estado 38

    $default  reduce usando la regla 6 (sentencia)


estado 11

   13 grammar: asig .

    $default  reduce usando la regla 13 (grammar)


estado 12

   14 grammar: while .

    $default  reduce usando la regla 14 (grammar)


estado 13

   17 grammar: if .

    $default  reduce usando la regla 17 (grammar)


estado 14

   15 grammar: display .

    $default  reduce usando la regla 15 (grammar)


estado 15

   16 grammar: get .

    $default  reduce usando la regla 16 (grammar)


estado 16

    7 sentencia: declaracion .

    $default  reduce usando la regla 7 (sentencia)


estado 17

   37 cond_final: NOT_T . cond_final

    NOT_T     desplazar e ir al estado 17
    PARENT_A  desplazar e ir al estado 18

    cond_final  ir al estado 39


estado 18

   31 cond_final: PARENT_A . cond_final AND_T cond_final PARENT_C
   33           | PARENT_A . cond AND_T $@3 cond PARENT_C
   35           | PARENT_A . cond OR_T $@4 cond PARENT_C
   36           | PARENT_A . cond PARENT_C
   38           | PARENT_A . cond_final PARENT_C

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    NOT_T        desplazar e ir al estado 17
    PARENT_A     desplazar e ir al estado 40
    '-'          desplazar e ir al estado 25

    numero      ir al estado 27
    cond_final  ir al estado 41
    cond        ir al estado 42
    expr        ir al estado 43
    termino     ir al estado 29
    factor      ir al estado 30


estado 19

   20 while: WHILE_T cond_final . LLAVE_A sentenciaCuerpo LLAVE_C

    LLAVE_A  desplazar e ir al estado 44


estado 20

   29 numero: CONST_INT .

    $default  reduce usando la regla 29 (numero)


estado 21

   30 numero: CONST_FLOAT .

    $default  reduce usando la regla 30 (numero)


estado 22

   28 const_string_r: CONST_STRING .

    $default  reduce usando la regla 28 (const_string_r)


estado 23

   57 factor: ID_T .

    $default  reduce usando la regla 57 (factor)


estado 24

   55 factor: PARENT_A . expr PARENT_C

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    expr     ir al estado 45
    termino  ir al estado 29
    factor   ir al estado 30


estado 25

   53 termino: '-' . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 46
    factor   ir al estado 30


estado 26

   25 display: DISPLAY const_string_r .

    $default  reduce usando la regla 25 (display)


estado 27

   56 factor: numero .

    $default  reduce usando la regla 56 (factor)


estado 28

   26 display: DISPLAY expr .
   48 expr: expr . OP_SUM termino
   49     | expr . OP_MENOS termino

    OP_MENOS  desplazar e ir al estado 47
    OP_SUM    desplazar e ir al estado 48

    $default  reduce usando la regla 26 (display)


estado 29

   50 expr: termino .
   51 termino: termino . OP_MUL factor
   52        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 49
    OP_MUL       desplazar e ir al estado 50

    $default  reduce usando la regla 50 (expr)


estado 30

   54 termino: factor .

    $default  reduce usando la regla 54 (termino)


estado 31

   27 get: GET ID_T .

    $default  reduce usando la regla 27 (get)


estado 32

   21 if: IF_T cond_final . LLAVE_A sentenciaCuerpo LLAVE_C
   24   | IF_T cond_final . LLAVE_A sentenciaCuerpo LLAVE_C $@1 ELSE_T LLAVE_A sentenciaCuerpo LLAVE_C $@2

    LLAVE_A  desplazar e ir al estado 51


estado 33

   58 declaracion: DIM OP_MENOR . dupla_asig OP_MAYOR

    ID_T  desplazar e ir al estado 52

    dupla_asig  ir al estado 53


estado 34

   18 asig: ID_T OP_ASIG . expr
   19     | ID_T OP_ASIG . const_string_r

    CONST_INT     desplazar e ir al estado 20
    CONST_FLOAT   desplazar e ir al estado 21
    CONST_STRING  desplazar e ir al estado 22
    ID_T          desplazar e ir al estado 23
    PARENT_A      desplazar e ir al estado 24
    '-'           desplazar e ir al estado 25

    const_string_r  ir al estado 54
    numero          ir al estado 27
    expr            ir al estado 55
    termino         ir al estado 29
    factor          ir al estado 30


estado 35

    0 $accept: programa_final $end .

    $default  aceptar


estado 36

    3 sentencia: sentencia grammar . SEP_LINEA
    5          | sentencia grammar .

    SEP_LINEA  desplazar e ir al estado 56

    $default  reduce usando la regla 5 (sentencia)


estado 37

    8 sentencia: sentencia declaracion .

    $default  reduce usando la regla 8 (sentencia)


estado 38

    4 sentencia: grammar SEP_LINEA .

    $default  reduce usando la regla 4 (sentencia)


estado 39

   37 cond_final: NOT_T cond_final .

    $default  reduce usando la regla 37 (cond_final)


estado 40

   31 cond_final: PARENT_A . cond_final AND_T cond_final PARENT_C
   33           | PARENT_A . cond AND_T $@3 cond PARENT_C
   35           | PARENT_A . cond OR_T $@4 cond PARENT_C
   36           | PARENT_A . cond PARENT_C
   38           | PARENT_A . cond_final PARENT_C
   55 factor: PARENT_A . expr PARENT_C

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    NOT_T        desplazar e ir al estado 17
    PARENT_A     desplazar e ir al estado 40
    '-'          desplazar e ir al estado 25

    numero      ir al estado 27
    cond_final  ir al estado 41
    cond        ir al estado 42
    expr        ir al estado 57
    termino     ir al estado 29
    factor      ir al estado 30


estado 41

   31 cond_final: PARENT_A cond_final . AND_T cond_final PARENT_C
   38           | PARENT_A cond_final . PARENT_C

    AND_T     desplazar e ir al estado 58
    PARENT_C  desplazar e ir al estado 59


estado 42

   33 cond_final: PARENT_A cond . AND_T $@3 cond PARENT_C
   35           | PARENT_A cond . OR_T $@4 cond PARENT_C
   36           | PARENT_A cond . PARENT_C

    OR_T      desplazar e ir al estado 60
    AND_T     desplazar e ir al estado 61
    PARENT_C  desplazar e ir al estado 62


estado 43

   39 cond: expr . OP_DISTINTO termino
   40     | expr . OP_IGUAL termino
   41     | expr . OP_MAYOR termino
   42     | expr . OP_MAYORIGUAL termino
   43     | expr . OP_MENOR termino
   44     | expr . OP_MENORIGUAL termino
   45     | expr . OR_T termino
   46     | expr . AND_T termino
   47     | expr . NOT_T termino
   48 expr: expr . OP_SUM termino
   49     | expr . OP_MENOS termino

    OP_MENOS       desplazar e ir al estado 47
    OP_SUM         desplazar e ir al estado 48
    OP_DISTINTO    desplazar e ir al estado 63
    OP_IGUAL       desplazar e ir al estado 64
    OP_MAYORIGUAL  desplazar e ir al estado 65
    OP_MAYOR       desplazar e ir al estado 66
    OP_MENOR       desplazar e ir al estado 67
    OP_MENORIGUAL  desplazar e ir al estado 68
    OR_T           desplazar e ir al estado 69
    AND_T          desplazar e ir al estado 70
    NOT_T          desplazar e ir al estado 71


estado 44

   20 while: WHILE_T cond_final LLAVE_A . sentenciaCuerpo LLAVE_C

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    ID_T     desplazar e ir al estado 6

    sentenciaCuerpo  ir al estado 72
    grammar          ir al estado 73
    asig             ir al estado 11
    while            ir al estado 12
    if               ir al estado 13
    display          ir al estado 14
    get              ir al estado 15


estado 45

   48 expr: expr . OP_SUM termino
   49     | expr . OP_MENOS termino
   55 factor: PARENT_A expr . PARENT_C

    OP_MENOS  desplazar e ir al estado 47
    OP_SUM    desplazar e ir al estado 48
    PARENT_C  desplazar e ir al estado 74


estado 46

   51 termino: termino . OP_MUL factor
   52        | termino . OP_DIVISION factor
   53        | '-' termino .

    $default  reduce usando la regla 53 (termino)


estado 47

   49 expr: expr OP_MENOS . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 75
    factor   ir al estado 30


estado 48

   48 expr: expr OP_SUM . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 76
    factor   ir al estado 30


estado 49

   52 termino: termino OP_DIVISION . factor

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24

    numero  ir al estado 27
    factor  ir al estado 77


estado 50

   51 termino: termino OP_MUL . factor

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24

    numero  ir al estado 27
    factor  ir al estado 78


estado 51

   21 if: IF_T cond_final LLAVE_A . sentenciaCuerpo LLAVE_C
   24   | IF_T cond_final LLAVE_A . sentenciaCuerpo LLAVE_C $@1 ELSE_T LLAVE_A sentenciaCuerpo LLAVE_C $@2

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    ID_T     desplazar e ir al estado 6

    sentenciaCuerpo  ir al estado 79
    grammar          ir al estado 73
    asig             ir al estado 11
    while            ir al estado 12
    if               ir al estado 13
    display          ir al estado 14
    get              ir al estado 15


estado 52

   59 dupla_asig: ID_T . COMA dupla_asig COMA tipo
   60           | ID_T . OP_MAYOR AS OP_MENOR tipo

    OP_MAYOR  desplazar e ir al estado 80
    COMA      desplazar e ir al estado 81


estado 53

   58 declaracion: DIM OP_MENOR dupla_asig . OP_MAYOR

    OP_MAYOR  desplazar e ir al estado 82


estado 54

   19 asig: ID_T OP_ASIG const_string_r .

    $default  reduce usando la regla 19 (asig)


estado 55

   18 asig: ID_T OP_ASIG expr .
   48 expr: expr . OP_SUM termino
   49     | expr . OP_MENOS termino

    OP_MENOS  desplazar e ir al estado 47
    OP_SUM    desplazar e ir al estado 48

    $default  reduce usando la regla 18 (asig)


estado 56

    3 sentencia: sentencia grammar SEP_LINEA .

    $default  reduce usando la regla 3 (sentencia)


estado 57

   39 cond: expr . OP_DISTINTO termino
   40     | expr . OP_IGUAL termino
   41     | expr . OP_MAYOR termino
   42     | expr . OP_MAYORIGUAL termino
   43     | expr . OP_MENOR termino
   44     | expr . OP_MENORIGUAL termino
   45     | expr . OR_T termino
   46     | expr . AND_T termino
   47     | expr . NOT_T termino
   48 expr: expr . OP_SUM termino
   49     | expr . OP_MENOS termino
   55 factor: PARENT_A expr . PARENT_C

    OP_MENOS       desplazar e ir al estado 47
    OP_SUM         desplazar e ir al estado 48
    OP_DISTINTO    desplazar e ir al estado 63
    OP_IGUAL       desplazar e ir al estado 64
    OP_MAYORIGUAL  desplazar e ir al estado 65
    OP_MAYOR       desplazar e ir al estado 66
    OP_MENOR       desplazar e ir al estado 67
    OP_MENORIGUAL  desplazar e ir al estado 68
    OR_T           desplazar e ir al estado 69
    AND_T          desplazar e ir al estado 70
    NOT_T          desplazar e ir al estado 71
    PARENT_C       desplazar e ir al estado 74


estado 58

   31 cond_final: PARENT_A cond_final AND_T . cond_final PARENT_C

    NOT_T     desplazar e ir al estado 17
    PARENT_A  desplazar e ir al estado 18

    cond_final  ir al estado 83


estado 59

   38 cond_final: PARENT_A cond_final PARENT_C .

    $default  reduce usando la regla 38 (cond_final)


estado 60

   35 cond_final: PARENT_A cond OR_T . $@4 cond PARENT_C

    $default  reduce usando la regla 34 ($@4)

    $@4  ir al estado 84


estado 61

   33 cond_final: PARENT_A cond AND_T . $@3 cond PARENT_C

    $default  reduce usando la regla 32 ($@3)

    $@3  ir al estado 85


estado 62

   36 cond_final: PARENT_A cond PARENT_C .

    $default  reduce usando la regla 36 (cond_final)


estado 63

   39 cond: expr OP_DISTINTO . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 86
    factor   ir al estado 30


estado 64

   40 cond: expr OP_IGUAL . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 87
    factor   ir al estado 30


estado 65

   42 cond: expr OP_MAYORIGUAL . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 88
    factor   ir al estado 30


estado 66

   41 cond: expr OP_MAYOR . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 89
    factor   ir al estado 30


estado 67

   43 cond: expr OP_MENOR . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 90
    factor   ir al estado 30


estado 68

   44 cond: expr OP_MENORIGUAL . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 91
    factor   ir al estado 30


estado 69

   45 cond: expr OR_T . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 92
    factor   ir al estado 30


estado 70

   46 cond: expr AND_T . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 93
    factor   ir al estado 30


estado 71

   47 cond: expr NOT_T . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 94
    factor   ir al estado 30


estado 72

    9 sentenciaCuerpo: sentenciaCuerpo . grammar SEP_LINEA
   11                | sentenciaCuerpo . grammar
   20 while: WHILE_T cond_final LLAVE_A sentenciaCuerpo . LLAVE_C

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    ID_T     desplazar e ir al estado 6
    LLAVE_C  desplazar e ir al estado 95

    grammar  ir al estado 96
    asig     ir al estado 11
    while    ir al estado 12
    if       ir al estado 13
    display  ir al estado 14
    get      ir al estado 15


estado 73

   10 sentenciaCuerpo: grammar . SEP_LINEA
   12                | grammar .

    SEP_LINEA  desplazar e ir al estado 97

    $default  reduce usando la regla 12 (sentenciaCuerpo)


estado 74

   55 factor: PARENT_A expr PARENT_C .

    $default  reduce usando la regla 55 (factor)


estado 75

   49 expr: expr OP_MENOS termino .
   51 termino: termino . OP_MUL factor
   52        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 49
    OP_MUL       desplazar e ir al estado 50

    $default  reduce usando la regla 49 (expr)


estado 76

   48 expr: expr OP_SUM termino .
   51 termino: termino . OP_MUL factor
   52        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 49
    OP_MUL       desplazar e ir al estado 50

    $default  reduce usando la regla 48 (expr)


estado 77

   52 termino: termino OP_DIVISION factor .

    $default  reduce usando la regla 52 (termino)


estado 78

   51 termino: termino OP_MUL factor .

    $default  reduce usando la regla 51 (termino)


estado 79

    9 sentenciaCuerpo: sentenciaCuerpo . grammar SEP_LINEA
   11                | sentenciaCuerpo . grammar
   21 if: IF_T cond_final LLAVE_A sentenciaCuerpo . LLAVE_C
   24   | IF_T cond_final LLAVE_A sentenciaCuerpo . LLAVE_C $@1 ELSE_T LLAVE_A sentenciaCuerpo LLAVE_C $@2

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    ID_T     desplazar e ir al estado 6
    LLAVE_C  desplazar e ir al estado 98

    grammar  ir al estado 96
    asig     ir al estado 11
    while    ir al estado 12
    if       ir al estado 13
    display  ir al estado 14
    get      ir al estado 15


estado 80

   60 dupla_asig: ID_T OP_MAYOR . AS OP_MENOR tipo

    AS  desplazar e ir al estado 99


estado 81

   59 dupla_asig: ID_T COMA . dupla_asig COMA tipo

    ID_T  desplazar e ir al estado 52

    dupla_asig  ir al estado 100


estado 82

   58 declaracion: DIM OP_MENOR dupla_asig OP_MAYOR .

    $default  reduce usando la regla 58 (declaracion)


estado 83

   31 cond_final: PARENT_A cond_final AND_T cond_final . PARENT_C

    PARENT_C  desplazar e ir al estado 101


estado 84

   35 cond_final: PARENT_A cond OR_T $@4 . cond PARENT_C

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    cond     ir al estado 102
    expr     ir al estado 43
    termino  ir al estado 29
    factor   ir al estado 30


estado 85

   33 cond_final: PARENT_A cond AND_T $@3 . cond PARENT_C

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    cond     ir al estado 103
    expr     ir al estado 43
    termino  ir al estado 29
    factor   ir al estado 30


estado 86

   39 cond: expr OP_DISTINTO termino .
   51 termino: termino . OP_MUL factor
   52        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 49
    OP_MUL       desplazar e ir al estado 50

    $default  reduce usando la regla 39 (cond)


estado 87

   40 cond: expr OP_IGUAL termino .
   51 termino: termino . OP_MUL factor
   52        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 49
    OP_MUL       desplazar e ir al estado 50

    $default  reduce usando la regla 40 (cond)


estado 88

   42 cond: expr OP_MAYORIGUAL termino .
   51 termino: termino . OP_MUL factor
   52        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 49
    OP_MUL       desplazar e ir al estado 50

    $default  reduce usando la regla 42 (cond)


estado 89

   41 cond: expr OP_MAYOR termino .
   51 termino: termino . OP_MUL factor
   52        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 49
    OP_MUL       desplazar e ir al estado 50

    $default  reduce usando la regla 41 (cond)


estado 90

   43 cond: expr OP_MENOR termino .
   51 termino: termino . OP_MUL factor
   52        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 49
    OP_MUL       desplazar e ir al estado 50

    $default  reduce usando la regla 43 (cond)


estado 91

   44 cond: expr OP_MENORIGUAL termino .
   51 termino: termino . OP_MUL factor
   52        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 49
    OP_MUL       desplazar e ir al estado 50

    $default  reduce usando la regla 44 (cond)


estado 92

   45 cond: expr OR_T termino .
   51 termino: termino . OP_MUL factor
   52        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 49
    OP_MUL       desplazar e ir al estado 50

    $default  reduce usando la regla 45 (cond)


estado 93

   46 cond: expr AND_T termino .
   51 termino: termino . OP_MUL factor
   52        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 49
    OP_MUL       desplazar e ir al estado 50

    $default  reduce usando la regla 46 (cond)


estado 94

   47 cond: expr NOT_T termino .
   51 termino: termino . OP_MUL factor
   52        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 49
    OP_MUL       desplazar e ir al estado 50

    $default  reduce usando la regla 47 (cond)


estado 95

   20 while: WHILE_T cond_final LLAVE_A sentenciaCuerpo LLAVE_C .

    $default  reduce usando la regla 20 (while)


estado 96

    9 sentenciaCuerpo: sentenciaCuerpo grammar . SEP_LINEA
   11                | sentenciaCuerpo grammar .

    SEP_LINEA  desplazar e ir al estado 104

    $default  reduce usando la regla 11 (sentenciaCuerpo)


estado 97

   10 sentenciaCuerpo: grammar SEP_LINEA .

    $default  reduce usando la regla 10 (sentenciaCuerpo)


estado 98

   21 if: IF_T cond_final LLAVE_A sentenciaCuerpo LLAVE_C .
   24   | IF_T cond_final LLAVE_A sentenciaCuerpo LLAVE_C . $@1 ELSE_T LLAVE_A sentenciaCuerpo LLAVE_C $@2

    ELSE_T    reduce usando la regla 22 ($@1)
    $default  reduce usando la regla 21 (if)

    $@1  ir al estado 105


estado 99

   60 dupla_asig: ID_T OP_MAYOR AS . OP_MENOR tipo

    OP_MENOR  desplazar e ir al estado 106


estado 100

   59 dupla_asig: ID_T COMA dupla_asig . COMA tipo

    COMA  desplazar e ir al estado 107


estado 101

   31 cond_final: PARENT_A cond_final AND_T cond_final PARENT_C .

    $default  reduce usando la regla 31 (cond_final)


estado 102

   35 cond_final: PARENT_A cond OR_T $@4 cond . PARENT_C

    PARENT_C  desplazar e ir al estado 108


estado 103

   33 cond_final: PARENT_A cond AND_T $@3 cond . PARENT_C

    PARENT_C  desplazar e ir al estado 109


estado 104

    9 sentenciaCuerpo: sentenciaCuerpo grammar SEP_LINEA .

    $default  reduce usando la regla 9 (sentenciaCuerpo)


estado 105

   24 if: IF_T cond_final LLAVE_A sentenciaCuerpo LLAVE_C $@1 . ELSE_T LLAVE_A sentenciaCuerpo LLAVE_C $@2

    ELSE_T  desplazar e ir al estado 110


estado 106

   60 dupla_asig: ID_T OP_MAYOR AS OP_MENOR . tipo

    FLOAT_T  desplazar e ir al estado 111
    INT_T    desplazar e ir al estado 112
    CHAR     desplazar e ir al estado 113
    STRING   desplazar e ir al estado 114

    tipo  ir al estado 115


estado 107

   59 dupla_asig: ID_T COMA dupla_asig COMA . tipo

    FLOAT_T  desplazar e ir al estado 111
    INT_T    desplazar e ir al estado 112
    CHAR     desplazar e ir al estado 113
    STRING   desplazar e ir al estado 114

    tipo  ir al estado 116


estado 108

   35 cond_final: PARENT_A cond OR_T $@4 cond PARENT_C .

    $default  reduce usando la regla 35 (cond_final)


estado 109

   33 cond_final: PARENT_A cond AND_T $@3 cond PARENT_C .

    $default  reduce usando la regla 33 (cond_final)


estado 110

   24 if: IF_T cond_final LLAVE_A sentenciaCuerpo LLAVE_C $@1 ELSE_T . LLAVE_A sentenciaCuerpo LLAVE_C $@2

    LLAVE_A  desplazar e ir al estado 117


estado 111

   61 tipo: FLOAT_T .

    $default  reduce usando la regla 61 (tipo)


estado 112

   62 tipo: INT_T .

    $default  reduce usando la regla 62 (tipo)


estado 113

   64 tipo: CHAR .

    $default  reduce usando la regla 64 (tipo)


estado 114

   63 tipo: STRING .

    $default  reduce usando la regla 63 (tipo)


estado 115

   60 dupla_asig: ID_T OP_MAYOR AS OP_MENOR tipo .

    $default  reduce usando la regla 60 (dupla_asig)


estado 116

   59 dupla_asig: ID_T COMA dupla_asig COMA tipo .

    $default  reduce usando la regla 59 (dupla_asig)


estado 117

   24 if: IF_T cond_final LLAVE_A sentenciaCuerpo LLAVE_C $@1 ELSE_T LLAVE_A . sentenciaCuerpo LLAVE_C $@2

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    ID_T     desplazar e ir al estado 6

    sentenciaCuerpo  ir al estado 118
    grammar          ir al estado 73
    asig             ir al estado 11
    while            ir al estado 12
    if               ir al estado 13
    display          ir al estado 14
    get              ir al estado 15


estado 118

    9 sentenciaCuerpo: sentenciaCuerpo . grammar SEP_LINEA
   11                | sentenciaCuerpo . grammar
   24 if: IF_T cond_final LLAVE_A sentenciaCuerpo LLAVE_C $@1 ELSE_T LLAVE_A sentenciaCuerpo . LLAVE_C $@2

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    ID_T     desplazar e ir al estado 6
    LLAVE_C  desplazar e ir al estado 119

    grammar  ir al estado 96
    asig     ir al estado 11
    while    ir al estado 12
    if       ir al estado 13
    display  ir al estado 14
    get      ir al estado 15


estado 119

   24 if: IF_T cond_final LLAVE_A sentenciaCuerpo LLAVE_C $@1 ELSE_T LLAVE_A sentenciaCuerpo LLAVE_C . $@2

    $default  reduce usando la regla 23 ($@2)

    $@2  ir al estado 120


estado 120

   24 if: IF_T cond_final LLAVE_A sentenciaCuerpo LLAVE_C $@1 ELSE_T LLAVE_A sentenciaCuerpo LLAVE_C $@2 .

    $default  reduce usando la regla 24 (if)
