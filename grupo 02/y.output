Terminals unused in grammar

   READ_T
   IN_T
   DO_T
   whitespace
   linefeed
   DIGITO
   LETRA
   COMILLA_D
   COMILLA_A
   COMILLA_C
   OP_AVG
   LLAVE_C
   LLAVE_A


Gramática

    0 $accept: programa_final $end

    1 programa_final: programa

    2 programa: sentencia

    3 sentencia: sentencia grammar SEP_LINEA
    4          | grammar SEP_LINEA
    5          | sentencia grammar
    6          | grammar
    7          | declaracion
    8          | sentencia declaracion

    9 sentenciaCuerpo: sentenciaCuerpo grammar SEP_LINEA
   10                | grammar SEP_LINEA
   11                | sentenciaCuerpo grammar
   12                | grammar

   13 grammar: asig
   14        | while
   15        | display
   16        | get
   17        | if

   18 asig: ID_T OP_ASIG expr
   19     | ID_T OP_ASIG const_string_r

   20 while: WHILE_T cond_final sentenciaCuerpo ENDWHILE

   21 if: IF_T cond_final sentenciaCuerpo ENDIF

   22 $@1: /* vacío */

   23 $@2: /* vacío */

   24 if: IF_T cond_final sentenciaCuerpo $@1 ELSE_T sentenciaCuerpo ENDIF $@2

   25 display: DISPLAY const_string_r
   26        | DISPLAY expr

   27 get: GET ID_T

   28 const_string_r: CONST_STRING

   29 numero: CONST_INT
   30       | CONST_FLOAT

   31 cond_final: PARENT_A cond_final AND_T cond_final PARENT_C

   32 $@3: /* vacío */

   33 cond_final: PARENT_A cond AND_T $@3 cond PARENT_C

   34 $@4: /* vacío */

   35 cond_final: PARENT_A cond OR_T $@4 cond PARENT_C
   36           | PARENT_A cond PARENT_C
   37           | NOT_T cond_final
   38           | PARENT_A cond_final PARENT_C

   39 cond: expr OP_DISTINTO expr
   40     | expr OP_IGUAL expr
   41     | expr OP_MAYOR expr
   42     | expr OP_MAYORIGUAL expr
   43     | expr OP_MENOR expr
   44     | expr OP_MENORIGUAL expr

   45 expr: expr OP_SUM termino
   46     | expr OP_MENOS termino
   47     | termino

   48 termino: termino OP_MUL factor
   49        | termino OP_DIVISION factor
   50        | '-' termino
   51        | factor

   52 factor: PARENT_A expr PARENT_C
   53       | numero
   54       | ID_T

   55 declaracion: DIM OP_MENOR dupla_asig OP_MAYOR

   56 dupla_asig: ID_T COMA dupla_asig COMA tipo
   57           | ID_T OP_MAYOR AS OP_MENOR tipo

   58 tipo: FLOAT_T
   59     | INT_T
   60     | STRING
   61     | CHAR


Terminales con las reglas donde aparecen

$end (0) 0
'-' (45) 50
error (256)
WHILE_T (258) 20
ENDWHILE (259) 20
DISPLAY (260) 25 26
GET (261) 27
READ_T (262)
FLOAT_T (263) 58
INT_T (264) 59
CHAR (265) 61
IN_T (266)
DO_T (267)
AS (268) 57
STRING (269) 60
whitespace (270)
linefeed (271)
DIGITO (272)
LETRA (273)
COMILLA_D (274)
COMILLA_A (275)
COMILLA_C (276)
CONST_INT (277) 29
CONST_FLOAT (278) 30
OP_AVG (279)
CONST_STRING (280) 28
ELSE_T (281) 24
IF_T (282) 21 24
ENDIF (283) 21 24
DIM (284) 55
ID_T (285) 18 19 27 54 56 57
OP_MENOS (286) 46
OP_SUM (287) 45
OP_DIVISION (288) 49
OP_MUL (289) 48
MENOS_UNARIO (290)
OP_ASIG (291) 18 19
OP_DISTINTO (292) 39
OP_IGUAL (293) 40
OP_MAYORIGUAL (294) 42
OP_MAYOR (295) 41 55 57
OP_MENOR (296) 43 55 57
OP_MENORIGUAL (297) 44
OR_T (298) 35
AND_T (299) 31 33
NOT_T (300) 37
LLAVE_C (301)
LLAVE_A (302)
PARENT_C (303) 31 33 35 36 38 52
PARENT_A (304) 31 33 35 36 38 52
COMA (305) 56
SEP_LINEA (306) 3 4 9 10


No terminales con las reglas donde aparecen

$accept (53)
    en la izquierda: 0
programa_final (54)
    en la izquierda: 1, en la derecha: 0
programa (55)
    en la izquierda: 2, en la derecha: 1
sentencia (56)
    en la izquierda: 3 4 5 6 7 8, en la derecha: 2 3 5 8
sentenciaCuerpo (57)
    en la izquierda: 9 10 11 12, en la derecha: 9 11 20 21 24
grammar (58)
    en la izquierda: 13 14 15 16 17, en la derecha: 3 4 5 6 9 10 11
    12
asig (59)
    en la izquierda: 18 19, en la derecha: 13
while (60)
    en la izquierda: 20, en la derecha: 14
if (61)
    en la izquierda: 21 24, en la derecha: 17
$@1 (62)
    en la izquierda: 22, en la derecha: 24
$@2 (63)
    en la izquierda: 23, en la derecha: 24
display (64)
    en la izquierda: 25 26, en la derecha: 15
get (65)
    en la izquierda: 27, en la derecha: 16
const_string_r (66)
    en la izquierda: 28, en la derecha: 19 25
numero (67)
    en la izquierda: 29 30, en la derecha: 53
cond_final (68)
    en la izquierda: 31 33 35 36 37 38, en la derecha: 20 21 24 31
    37 38
$@3 (69)
    en la izquierda: 32, en la derecha: 33
$@4 (70)
    en la izquierda: 34, en la derecha: 35
cond (71)
    en la izquierda: 39 40 41 42 43 44, en la derecha: 33 35 36
expr (72)
    en la izquierda: 45 46 47, en la derecha: 18 26 39 40 41 42 43
    44 45 46 52
termino (73)
    en la izquierda: 48 49 50 51, en la derecha: 45 46 47 48 49 50
factor (74)
    en la izquierda: 52 53 54, en la derecha: 48 49 51
declaracion (75)
    en la izquierda: 55, en la derecha: 7 8
dupla_asig (76)
    en la izquierda: 56 57, en la derecha: 55 56
tipo (77)
    en la izquierda: 58 59 60 61, en la derecha: 56 57


estado 0

    0 $accept: . programa_final $end

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    DIM      desplazar e ir al estado 5
    ID_T     desplazar e ir al estado 6

    programa_final  ir al estado 7
    programa        ir al estado 8
    sentencia       ir al estado 9
    grammar         ir al estado 10
    asig            ir al estado 11
    while           ir al estado 12
    if              ir al estado 13
    display         ir al estado 14
    get             ir al estado 15
    declaracion     ir al estado 16


estado 1

   20 while: WHILE_T . cond_final sentenciaCuerpo ENDWHILE

    NOT_T     desplazar e ir al estado 17
    PARENT_A  desplazar e ir al estado 18

    cond_final  ir al estado 19


estado 2

   25 display: DISPLAY . const_string_r
   26        | DISPLAY . expr

    CONST_INT     desplazar e ir al estado 20
    CONST_FLOAT   desplazar e ir al estado 21
    CONST_STRING  desplazar e ir al estado 22
    ID_T          desplazar e ir al estado 23
    PARENT_A      desplazar e ir al estado 24
    '-'           desplazar e ir al estado 25

    const_string_r  ir al estado 26
    numero          ir al estado 27
    expr            ir al estado 28
    termino         ir al estado 29
    factor          ir al estado 30


estado 3

   27 get: GET . ID_T

    ID_T  desplazar e ir al estado 31


estado 4

   21 if: IF_T . cond_final sentenciaCuerpo ENDIF
   24   | IF_T . cond_final sentenciaCuerpo $@1 ELSE_T sentenciaCuerpo ENDIF $@2

    NOT_T     desplazar e ir al estado 17
    PARENT_A  desplazar e ir al estado 18

    cond_final  ir al estado 32


estado 5

   55 declaracion: DIM . OP_MENOR dupla_asig OP_MAYOR

    OP_MENOR  desplazar e ir al estado 33


estado 6

   18 asig: ID_T . OP_ASIG expr
   19     | ID_T . OP_ASIG const_string_r

    OP_ASIG  desplazar e ir al estado 34


estado 7

    0 $accept: programa_final . $end

    $end  desplazar e ir al estado 35


estado 8

    1 programa_final: programa .

    $default  reduce usando la regla 1 (programa_final)


estado 9

    2 programa: sentencia .
    3 sentencia: sentencia . grammar SEP_LINEA
    5          | sentencia . grammar
    8          | sentencia . declaracion

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    DIM      desplazar e ir al estado 5
    ID_T     desplazar e ir al estado 6

    $default  reduce usando la regla 2 (programa)

    grammar      ir al estado 36
    asig         ir al estado 11
    while        ir al estado 12
    if           ir al estado 13
    display      ir al estado 14
    get          ir al estado 15
    declaracion  ir al estado 37


estado 10

    4 sentencia: grammar . SEP_LINEA
    6          | grammar .

    SEP_LINEA  desplazar e ir al estado 38

    $default  reduce usando la regla 6 (sentencia)


estado 11

   13 grammar: asig .

    $default  reduce usando la regla 13 (grammar)


estado 12

   14 grammar: while .

    $default  reduce usando la regla 14 (grammar)


estado 13

   17 grammar: if .

    $default  reduce usando la regla 17 (grammar)


estado 14

   15 grammar: display .

    $default  reduce usando la regla 15 (grammar)


estado 15

   16 grammar: get .

    $default  reduce usando la regla 16 (grammar)


estado 16

    7 sentencia: declaracion .

    $default  reduce usando la regla 7 (sentencia)


estado 17

   37 cond_final: NOT_T . cond_final

    NOT_T     desplazar e ir al estado 17
    PARENT_A  desplazar e ir al estado 18

    cond_final  ir al estado 39


estado 18

   31 cond_final: PARENT_A . cond_final AND_T cond_final PARENT_C
   33           | PARENT_A . cond AND_T $@3 cond PARENT_C
   35           | PARENT_A . cond OR_T $@4 cond PARENT_C
   36           | PARENT_A . cond PARENT_C
   38           | PARENT_A . cond_final PARENT_C

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    NOT_T        desplazar e ir al estado 17
    PARENT_A     desplazar e ir al estado 40
    '-'          desplazar e ir al estado 25

    numero      ir al estado 27
    cond_final  ir al estado 41
    cond        ir al estado 42
    expr        ir al estado 43
    termino     ir al estado 29
    factor      ir al estado 30


estado 19

   20 while: WHILE_T cond_final . sentenciaCuerpo ENDWHILE

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    ID_T     desplazar e ir al estado 6

    sentenciaCuerpo  ir al estado 44
    grammar          ir al estado 45
    asig             ir al estado 11
    while            ir al estado 12
    if               ir al estado 13
    display          ir al estado 14
    get              ir al estado 15


estado 20

   29 numero: CONST_INT .

    $default  reduce usando la regla 29 (numero)


estado 21

   30 numero: CONST_FLOAT .

    $default  reduce usando la regla 30 (numero)


estado 22

   28 const_string_r: CONST_STRING .

    $default  reduce usando la regla 28 (const_string_r)


estado 23

   54 factor: ID_T .

    $default  reduce usando la regla 54 (factor)


estado 24

   52 factor: PARENT_A . expr PARENT_C

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    expr     ir al estado 46
    termino  ir al estado 29
    factor   ir al estado 30


estado 25

   50 termino: '-' . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 47
    factor   ir al estado 30


estado 26

   25 display: DISPLAY const_string_r .

    $default  reduce usando la regla 25 (display)


estado 27

   53 factor: numero .

    $default  reduce usando la regla 53 (factor)


estado 28

   26 display: DISPLAY expr .
   45 expr: expr . OP_SUM termino
   46     | expr . OP_MENOS termino

    OP_MENOS  desplazar e ir al estado 48
    OP_SUM    desplazar e ir al estado 49

    $default  reduce usando la regla 26 (display)


estado 29

   47 expr: termino .
   48 termino: termino . OP_MUL factor
   49        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 50
    OP_MUL       desplazar e ir al estado 51

    $default  reduce usando la regla 47 (expr)


estado 30

   51 termino: factor .

    $default  reduce usando la regla 51 (termino)


estado 31

   27 get: GET ID_T .

    $default  reduce usando la regla 27 (get)


estado 32

   21 if: IF_T cond_final . sentenciaCuerpo ENDIF
   24   | IF_T cond_final . sentenciaCuerpo $@1 ELSE_T sentenciaCuerpo ENDIF $@2

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    ID_T     desplazar e ir al estado 6

    sentenciaCuerpo  ir al estado 52
    grammar          ir al estado 45
    asig             ir al estado 11
    while            ir al estado 12
    if               ir al estado 13
    display          ir al estado 14
    get              ir al estado 15


estado 33

   55 declaracion: DIM OP_MENOR . dupla_asig OP_MAYOR

    ID_T  desplazar e ir al estado 53

    dupla_asig  ir al estado 54


estado 34

   18 asig: ID_T OP_ASIG . expr
   19     | ID_T OP_ASIG . const_string_r

    CONST_INT     desplazar e ir al estado 20
    CONST_FLOAT   desplazar e ir al estado 21
    CONST_STRING  desplazar e ir al estado 22
    ID_T          desplazar e ir al estado 23
    PARENT_A      desplazar e ir al estado 24
    '-'           desplazar e ir al estado 25

    const_string_r  ir al estado 55
    numero          ir al estado 27
    expr            ir al estado 56
    termino         ir al estado 29
    factor          ir al estado 30


estado 35

    0 $accept: programa_final $end .

    $default  aceptar


estado 36

    3 sentencia: sentencia grammar . SEP_LINEA
    5          | sentencia grammar .

    SEP_LINEA  desplazar e ir al estado 57

    $default  reduce usando la regla 5 (sentencia)


estado 37

    8 sentencia: sentencia declaracion .

    $default  reduce usando la regla 8 (sentencia)


estado 38

    4 sentencia: grammar SEP_LINEA .

    $default  reduce usando la regla 4 (sentencia)


estado 39

   37 cond_final: NOT_T cond_final .

    $default  reduce usando la regla 37 (cond_final)


estado 40

   31 cond_final: PARENT_A . cond_final AND_T cond_final PARENT_C
   33           | PARENT_A . cond AND_T $@3 cond PARENT_C
   35           | PARENT_A . cond OR_T $@4 cond PARENT_C
   36           | PARENT_A . cond PARENT_C
   38           | PARENT_A . cond_final PARENT_C
   52 factor: PARENT_A . expr PARENT_C

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    NOT_T        desplazar e ir al estado 17
    PARENT_A     desplazar e ir al estado 40
    '-'          desplazar e ir al estado 25

    numero      ir al estado 27
    cond_final  ir al estado 41
    cond        ir al estado 42
    expr        ir al estado 58
    termino     ir al estado 29
    factor      ir al estado 30


estado 41

   31 cond_final: PARENT_A cond_final . AND_T cond_final PARENT_C
   38           | PARENT_A cond_final . PARENT_C

    AND_T     desplazar e ir al estado 59
    PARENT_C  desplazar e ir al estado 60


estado 42

   33 cond_final: PARENT_A cond . AND_T $@3 cond PARENT_C
   35           | PARENT_A cond . OR_T $@4 cond PARENT_C
   36           | PARENT_A cond . PARENT_C

    OR_T      desplazar e ir al estado 61
    AND_T     desplazar e ir al estado 62
    PARENT_C  desplazar e ir al estado 63


estado 43

   39 cond: expr . OP_DISTINTO expr
   40     | expr . OP_IGUAL expr
   41     | expr . OP_MAYOR expr
   42     | expr . OP_MAYORIGUAL expr
   43     | expr . OP_MENOR expr
   44     | expr . OP_MENORIGUAL expr
   45 expr: expr . OP_SUM termino
   46     | expr . OP_MENOS termino

    OP_MENOS       desplazar e ir al estado 48
    OP_SUM         desplazar e ir al estado 49
    OP_DISTINTO    desplazar e ir al estado 64
    OP_IGUAL       desplazar e ir al estado 65
    OP_MAYORIGUAL  desplazar e ir al estado 66
    OP_MAYOR       desplazar e ir al estado 67
    OP_MENOR       desplazar e ir al estado 68
    OP_MENORIGUAL  desplazar e ir al estado 69


estado 44

    9 sentenciaCuerpo: sentenciaCuerpo . grammar SEP_LINEA
   11                | sentenciaCuerpo . grammar
   20 while: WHILE_T cond_final sentenciaCuerpo . ENDWHILE

    WHILE_T   desplazar e ir al estado 1
    ENDWHILE  desplazar e ir al estado 70
    DISPLAY   desplazar e ir al estado 2
    GET       desplazar e ir al estado 3
    IF_T      desplazar e ir al estado 4
    ID_T      desplazar e ir al estado 6

    grammar  ir al estado 71
    asig     ir al estado 11
    while    ir al estado 12
    if       ir al estado 13
    display  ir al estado 14
    get      ir al estado 15


estado 45

   10 sentenciaCuerpo: grammar . SEP_LINEA
   12                | grammar .

    SEP_LINEA  desplazar e ir al estado 72

    $default  reduce usando la regla 12 (sentenciaCuerpo)


estado 46

   45 expr: expr . OP_SUM termino
   46     | expr . OP_MENOS termino
   52 factor: PARENT_A expr . PARENT_C

    OP_MENOS  desplazar e ir al estado 48
    OP_SUM    desplazar e ir al estado 49
    PARENT_C  desplazar e ir al estado 73


estado 47

   48 termino: termino . OP_MUL factor
   49        | termino . OP_DIVISION factor
   50        | '-' termino .

    $default  reduce usando la regla 50 (termino)


estado 48

   46 expr: expr OP_MENOS . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 74
    factor   ir al estado 30


estado 49

   45 expr: expr OP_SUM . termino

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    termino  ir al estado 75
    factor   ir al estado 30


estado 50

   49 termino: termino OP_DIVISION . factor

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24

    numero  ir al estado 27
    factor  ir al estado 76


estado 51

   48 termino: termino OP_MUL . factor

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24

    numero  ir al estado 27
    factor  ir al estado 77


estado 52

    9 sentenciaCuerpo: sentenciaCuerpo . grammar SEP_LINEA
   11                | sentenciaCuerpo . grammar
   21 if: IF_T cond_final sentenciaCuerpo . ENDIF
   24   | IF_T cond_final sentenciaCuerpo . $@1 ELSE_T sentenciaCuerpo ENDIF $@2

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    ENDIF    desplazar e ir al estado 78
    ID_T     desplazar e ir al estado 6

    $default  reduce usando la regla 22 ($@1)

    grammar  ir al estado 71
    asig     ir al estado 11
    while    ir al estado 12
    if       ir al estado 13
    $@1      ir al estado 79
    display  ir al estado 14
    get      ir al estado 15


estado 53

   56 dupla_asig: ID_T . COMA dupla_asig COMA tipo
   57           | ID_T . OP_MAYOR AS OP_MENOR tipo

    OP_MAYOR  desplazar e ir al estado 80
    COMA      desplazar e ir al estado 81


estado 54

   55 declaracion: DIM OP_MENOR dupla_asig . OP_MAYOR

    OP_MAYOR  desplazar e ir al estado 82


estado 55

   19 asig: ID_T OP_ASIG const_string_r .

    $default  reduce usando la regla 19 (asig)


estado 56

   18 asig: ID_T OP_ASIG expr .
   45 expr: expr . OP_SUM termino
   46     | expr . OP_MENOS termino

    OP_MENOS  desplazar e ir al estado 48
    OP_SUM    desplazar e ir al estado 49

    $default  reduce usando la regla 18 (asig)


estado 57

    3 sentencia: sentencia grammar SEP_LINEA .

    $default  reduce usando la regla 3 (sentencia)


estado 58

   39 cond: expr . OP_DISTINTO expr
   40     | expr . OP_IGUAL expr
   41     | expr . OP_MAYOR expr
   42     | expr . OP_MAYORIGUAL expr
   43     | expr . OP_MENOR expr
   44     | expr . OP_MENORIGUAL expr
   45 expr: expr . OP_SUM termino
   46     | expr . OP_MENOS termino
   52 factor: PARENT_A expr . PARENT_C

    OP_MENOS       desplazar e ir al estado 48
    OP_SUM         desplazar e ir al estado 49
    OP_DISTINTO    desplazar e ir al estado 64
    OP_IGUAL       desplazar e ir al estado 65
    OP_MAYORIGUAL  desplazar e ir al estado 66
    OP_MAYOR       desplazar e ir al estado 67
    OP_MENOR       desplazar e ir al estado 68
    OP_MENORIGUAL  desplazar e ir al estado 69
    PARENT_C       desplazar e ir al estado 73


estado 59

   31 cond_final: PARENT_A cond_final AND_T . cond_final PARENT_C

    NOT_T     desplazar e ir al estado 17
    PARENT_A  desplazar e ir al estado 18

    cond_final  ir al estado 83


estado 60

   38 cond_final: PARENT_A cond_final PARENT_C .

    $default  reduce usando la regla 38 (cond_final)


estado 61

   35 cond_final: PARENT_A cond OR_T . $@4 cond PARENT_C

    $default  reduce usando la regla 34 ($@4)

    $@4  ir al estado 84


estado 62

   33 cond_final: PARENT_A cond AND_T . $@3 cond PARENT_C

    $default  reduce usando la regla 32 ($@3)

    $@3  ir al estado 85


estado 63

   36 cond_final: PARENT_A cond PARENT_C .

    $default  reduce usando la regla 36 (cond_final)


estado 64

   39 cond: expr OP_DISTINTO . expr

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    expr     ir al estado 86
    termino  ir al estado 29
    factor   ir al estado 30


estado 65

   40 cond: expr OP_IGUAL . expr

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    expr     ir al estado 87
    termino  ir al estado 29
    factor   ir al estado 30


estado 66

   42 cond: expr OP_MAYORIGUAL . expr

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    expr     ir al estado 88
    termino  ir al estado 29
    factor   ir al estado 30


estado 67

   41 cond: expr OP_MAYOR . expr

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    expr     ir al estado 89
    termino  ir al estado 29
    factor   ir al estado 30


estado 68

   43 cond: expr OP_MENOR . expr

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    expr     ir al estado 90
    termino  ir al estado 29
    factor   ir al estado 30


estado 69

   44 cond: expr OP_MENORIGUAL . expr

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    expr     ir al estado 91
    termino  ir al estado 29
    factor   ir al estado 30


estado 70

   20 while: WHILE_T cond_final sentenciaCuerpo ENDWHILE .

    $default  reduce usando la regla 20 (while)


estado 71

    9 sentenciaCuerpo: sentenciaCuerpo grammar . SEP_LINEA
   11                | sentenciaCuerpo grammar .

    SEP_LINEA  desplazar e ir al estado 92

    $default  reduce usando la regla 11 (sentenciaCuerpo)


estado 72

   10 sentenciaCuerpo: grammar SEP_LINEA .

    $default  reduce usando la regla 10 (sentenciaCuerpo)


estado 73

   52 factor: PARENT_A expr PARENT_C .

    $default  reduce usando la regla 52 (factor)


estado 74

   46 expr: expr OP_MENOS termino .
   48 termino: termino . OP_MUL factor
   49        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 50
    OP_MUL       desplazar e ir al estado 51

    $default  reduce usando la regla 46 (expr)


estado 75

   45 expr: expr OP_SUM termino .
   48 termino: termino . OP_MUL factor
   49        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 50
    OP_MUL       desplazar e ir al estado 51

    $default  reduce usando la regla 45 (expr)


estado 76

   49 termino: termino OP_DIVISION factor .

    $default  reduce usando la regla 49 (termino)


estado 77

   48 termino: termino OP_MUL factor .

    $default  reduce usando la regla 48 (termino)


estado 78

   21 if: IF_T cond_final sentenciaCuerpo ENDIF .

    $default  reduce usando la regla 21 (if)


estado 79

   24 if: IF_T cond_final sentenciaCuerpo $@1 . ELSE_T sentenciaCuerpo ENDIF $@2

    ELSE_T  desplazar e ir al estado 93


estado 80

   57 dupla_asig: ID_T OP_MAYOR . AS OP_MENOR tipo

    AS  desplazar e ir al estado 94


estado 81

   56 dupla_asig: ID_T COMA . dupla_asig COMA tipo

    ID_T  desplazar e ir al estado 53

    dupla_asig  ir al estado 95


estado 82

   55 declaracion: DIM OP_MENOR dupla_asig OP_MAYOR .

    $default  reduce usando la regla 55 (declaracion)


estado 83

   31 cond_final: PARENT_A cond_final AND_T cond_final . PARENT_C

    PARENT_C  desplazar e ir al estado 96


estado 84

   35 cond_final: PARENT_A cond OR_T $@4 . cond PARENT_C

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    cond     ir al estado 97
    expr     ir al estado 43
    termino  ir al estado 29
    factor   ir al estado 30


estado 85

   33 cond_final: PARENT_A cond AND_T $@3 . cond PARENT_C

    CONST_INT    desplazar e ir al estado 20
    CONST_FLOAT  desplazar e ir al estado 21
    ID_T         desplazar e ir al estado 23
    PARENT_A     desplazar e ir al estado 24
    '-'          desplazar e ir al estado 25

    numero   ir al estado 27
    cond     ir al estado 98
    expr     ir al estado 43
    termino  ir al estado 29
    factor   ir al estado 30


estado 86

   39 cond: expr OP_DISTINTO expr .
   45 expr: expr . OP_SUM termino
   46     | expr . OP_MENOS termino

    OP_MENOS  desplazar e ir al estado 48
    OP_SUM    desplazar e ir al estado 49

    $default  reduce usando la regla 39 (cond)


estado 87

   40 cond: expr OP_IGUAL expr .
   45 expr: expr . OP_SUM termino
   46     | expr . OP_MENOS termino

    OP_MENOS  desplazar e ir al estado 48
    OP_SUM    desplazar e ir al estado 49

    $default  reduce usando la regla 40 (cond)


estado 88

   42 cond: expr OP_MAYORIGUAL expr .
   45 expr: expr . OP_SUM termino
   46     | expr . OP_MENOS termino

    OP_MENOS  desplazar e ir al estado 48
    OP_SUM    desplazar e ir al estado 49

    $default  reduce usando la regla 42 (cond)


estado 89

   41 cond: expr OP_MAYOR expr .
   45 expr: expr . OP_SUM termino
   46     | expr . OP_MENOS termino

    OP_MENOS  desplazar e ir al estado 48
    OP_SUM    desplazar e ir al estado 49

    $default  reduce usando la regla 41 (cond)


estado 90

   43 cond: expr OP_MENOR expr .
   45 expr: expr . OP_SUM termino
   46     | expr . OP_MENOS termino

    OP_MENOS  desplazar e ir al estado 48
    OP_SUM    desplazar e ir al estado 49

    $default  reduce usando la regla 43 (cond)


estado 91

   44 cond: expr OP_MENORIGUAL expr .
   45 expr: expr . OP_SUM termino
   46     | expr . OP_MENOS termino

    OP_MENOS  desplazar e ir al estado 48
    OP_SUM    desplazar e ir al estado 49

    $default  reduce usando la regla 44 (cond)


estado 92

    9 sentenciaCuerpo: sentenciaCuerpo grammar SEP_LINEA .

    $default  reduce usando la regla 9 (sentenciaCuerpo)


estado 93

   24 if: IF_T cond_final sentenciaCuerpo $@1 ELSE_T . sentenciaCuerpo ENDIF $@2

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    ID_T     desplazar e ir al estado 6

    sentenciaCuerpo  ir al estado 99
    grammar          ir al estado 45
    asig             ir al estado 11
    while            ir al estado 12
    if               ir al estado 13
    display          ir al estado 14
    get              ir al estado 15


estado 94

   57 dupla_asig: ID_T OP_MAYOR AS . OP_MENOR tipo

    OP_MENOR  desplazar e ir al estado 100


estado 95

   56 dupla_asig: ID_T COMA dupla_asig . COMA tipo

    COMA  desplazar e ir al estado 101


estado 96

   31 cond_final: PARENT_A cond_final AND_T cond_final PARENT_C .

    $default  reduce usando la regla 31 (cond_final)


estado 97

   35 cond_final: PARENT_A cond OR_T $@4 cond . PARENT_C

    PARENT_C  desplazar e ir al estado 102


estado 98

   33 cond_final: PARENT_A cond AND_T $@3 cond . PARENT_C

    PARENT_C  desplazar e ir al estado 103


estado 99

    9 sentenciaCuerpo: sentenciaCuerpo . grammar SEP_LINEA
   11                | sentenciaCuerpo . grammar
   24 if: IF_T cond_final sentenciaCuerpo $@1 ELSE_T sentenciaCuerpo . ENDIF $@2

    WHILE_T  desplazar e ir al estado 1
    DISPLAY  desplazar e ir al estado 2
    GET      desplazar e ir al estado 3
    IF_T     desplazar e ir al estado 4
    ENDIF    desplazar e ir al estado 104
    ID_T     desplazar e ir al estado 6

    grammar  ir al estado 71
    asig     ir al estado 11
    while    ir al estado 12
    if       ir al estado 13
    display  ir al estado 14
    get      ir al estado 15


estado 100

   57 dupla_asig: ID_T OP_MAYOR AS OP_MENOR . tipo

    FLOAT_T  desplazar e ir al estado 105
    INT_T    desplazar e ir al estado 106
    CHAR     desplazar e ir al estado 107
    STRING   desplazar e ir al estado 108

    tipo  ir al estado 109


estado 101

   56 dupla_asig: ID_T COMA dupla_asig COMA . tipo

    FLOAT_T  desplazar e ir al estado 105
    INT_T    desplazar e ir al estado 106
    CHAR     desplazar e ir al estado 107
    STRING   desplazar e ir al estado 108

    tipo  ir al estado 110


estado 102

   35 cond_final: PARENT_A cond OR_T $@4 cond PARENT_C .

    $default  reduce usando la regla 35 (cond_final)


estado 103

   33 cond_final: PARENT_A cond AND_T $@3 cond PARENT_C .

    $default  reduce usando la regla 33 (cond_final)


estado 104

   24 if: IF_T cond_final sentenciaCuerpo $@1 ELSE_T sentenciaCuerpo ENDIF . $@2

    $default  reduce usando la regla 23 ($@2)

    $@2  ir al estado 111


estado 105

   58 tipo: FLOAT_T .

    $default  reduce usando la regla 58 (tipo)


estado 106

   59 tipo: INT_T .

    $default  reduce usando la regla 59 (tipo)


estado 107

   61 tipo: CHAR .

    $default  reduce usando la regla 61 (tipo)


estado 108

   60 tipo: STRING .

    $default  reduce usando la regla 60 (tipo)


estado 109

   57 dupla_asig: ID_T OP_MAYOR AS OP_MENOR tipo .

    $default  reduce usando la regla 57 (dupla_asig)


estado 110

   56 dupla_asig: ID_T COMA dupla_asig COMA tipo .

    $default  reduce usando la regla 56 (dupla_asig)


estado 111

   24 if: IF_T cond_final sentenciaCuerpo $@1 ELSE_T sentenciaCuerpo ENDIF $@2 .

    $default  reduce usando la regla 24 (if)
